{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAeF,SAASC,cAAc,uBACtCE,EAAcH,SAASC,cAAc,sBACrCG,EAAgBJ,SAASC,cAAc,wBAEzCI,EAAY,EACZC,EAAO,EACPC,EAAS,EACTC,EAAW,EAqBfT,EAAOU,iBAAiB,UAAU,SAAAC,qBAO9BC,YAAW,WA1Bf,IAAuBC,EAAUC,EA2B3BL,GAAY,EACZH,EAAYS,OAAOT,GAEfU,IACFV,GAAaS,OAAOR,KA/BLM,EAkCHJ,EAlCaK,EAkCHR,EAjCrB,IAAIW,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCV,YAAW,WACLQ,EACFF,EAAQ,CACNL,SAAAA,EACAC,MAAAA,IAGFK,EAAO,CACLN,SAAAA,EACAC,MAAAA,MAGHA,OAoBES,MAAK,SAAAC,OAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MACjBW,EAAA3B,GAAS4B,OAAOC,QACb,uBAAuCC,OAAff,EAAS,QAAYe,OAANd,EAAM,UAGjDe,OAAM,SAAAL,OAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MAClBW,EAAA3B,GAAS4B,OAAOI,QACb,sBAAoCF,OAAff,EAAS,QAAYe,OAANd,EAAM,YAGhDR,IAzBLK,EAAMoB,iBACNzB,EAAYH,EAAa6B,MACzBzB,EAAOH,EAAY4B,MACnBxB,EAASH,EAAc2B,MAEvB,IAAK,IAAIhB,EAAI,EAAGA,EAAIR,EAAQQ,GAAK,EAACiB,EAAAjB,GAuBlCP,EAAW","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst inputDelayEl = document.querySelector('input[name=\"delay\"]');\nconst inputStepEl = document.querySelector('input[name=\"step\"]');\nconst inputAmountEl = document.querySelector('input[name=\"amount\"]');\n\nlet delayTime = 0;\nlet step = 0;\nlet amount = 0;\nlet position = 0;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        reject({\n          position,\n          delay,\n        });\n      }\n    }, delay);\n  });\n}\n\nformEl.addEventListener('submit', event => {\n  event.preventDefault();\n  delayTime = inputDelayEl.value;\n  step = inputStepEl.value;\n  amount = inputAmountEl.value;\n\n  for (let i = 0; i < amount; i += 1) {\n    setTimeout(() => {\n      position += 1;\n      delayTime = Number(delayTime);\n\n      if (i) {\n        delayTime += Number(step);\n      }\n\n      createPromise(position, delayTime)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }, delayTime);\n  }\n\n  position = 0;\n});\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$inputDelayEl","$ce04d3a99e08e73b$var$inputStepEl","$ce04d3a99e08e73b$var$inputAmountEl","$ce04d3a99e08e73b$var$delayTime","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$position","addEventListener","event","setTimeout","position","delay","Number","i","Promise","resolve","reject","shouldResolve","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","preventDefault","value","_loop"],"version":3,"file":"03-promises.fbd7ed4e.js.map"}