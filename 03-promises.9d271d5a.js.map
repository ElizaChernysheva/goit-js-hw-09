{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAEhCC,GADQF,SAASC,cAAc,yBAChBD,SAASC,cAAc,wBACtCE,EAAcH,SAASC,cAAc,sBACrCG,EAAgBJ,SAASC,cAAc,wBAEzCI,EAAY,EACZC,EAAO,EACPC,EAAS,EACTC,EAAW,EACXC,EAAY,EAqBhBV,EAAOW,iBAAiB,UAAU,SAAAC,GAChCA,EAAMC,iBACNP,EAAYH,EAAaW,MACzBP,EAAOH,EAAYU,MACnBN,EAASH,EAAcS,MAEvB,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAQO,GAAK,EAC/BL,GAAaM,OAAOT,GACpBU,QAAQC,IAAIR,GAEZS,YAAW,WA7Bf,IAAuBC,EAAUC,GAAVD,EA8BjBX,GAAY,EA9BeY,EA+BHf,EA9BrB,IAAIgB,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCR,YAAW,WACLM,EACFF,EAAQ,CACNH,SAAAA,EACAC,MAAAA,IAGFG,EAAO,CACLJ,SAAAA,EACAC,MAAAA,MAGHA,OAiBEO,MAAK,SAAAC,OAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MACjBS,EAAAhC,GAASiC,OAAOC,QACb,uBAAuCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,UAGjDa,OAAM,SAAAL,OAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MAClBS,EAAAhC,GAASiC,OAAOI,QACb,sBAAoCF,OAAfb,EAAS,QAAYa,OAANZ,EAAM,YAGhDX","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst btnEl = document.querySelector('button[type=\"submit\"]');\nconst inputDelayEl = document.querySelector('input[name=\"delay\"]');\nconst inputStepEl = document.querySelector('input[name=\"step\"]');\nconst inputAmountEl = document.querySelector('input[name=\"amount\"]');\n\nlet delayTime = 0;\nlet step = 0;\nlet amount = 0;\nlet position = 0;\nlet delayStep = 0;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        reject({\n          position,\n          delay,\n        });\n      }\n    }, delay);\n  });\n}\n\nformEl.addEventListener('submit', event => {\n  event.preventDefault();\n  delayTime = inputDelayEl.value;\n  step = inputStepEl.value;\n  amount = inputAmountEl.value;\n\n  for (let i = 0; i < amount; i += 1) {\n    delayStep += Number(step);\n    console.log(delayStep);\n\n    setTimeout(() => {\n      position += 1;\n      createPromise(position, delayTime)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }, delayStep);\n  }\n});\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$inputDelayEl","$ce04d3a99e08e73b$var$inputStepEl","$ce04d3a99e08e73b$var$inputAmountEl","$ce04d3a99e08e73b$var$delayTime","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$delayStep","addEventListener","event","preventDefault","value","i","Number","console","log","setTimeout","position","delay","Promise","resolve","reject","shouldResolve","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.9d271d5a.js.map"}