{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAeF,SAASC,cAAc,uBACtCE,EAAcH,SAASC,cAAc,sBACrCG,EAAgBJ,SAASC,cAAc,wBAE7C,IAAII,EAAY,EACZC,EAAO,EACPC,EAAS,EACTC,EAAW,EAqBfT,EAAOU,iBAAiB,UAAUC,IAChCA,EAAMC,iBACNN,EAAYH,EAAaU,MACzBN,EAAOH,EAAYS,MACnBL,EAASH,EAAcQ,MAEvB,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAQM,GAAK,EAC/BC,YAAW,KA1Bf,IAAuBC,EAAUC,EA2B3BR,GAAY,EACZH,EAAYY,OAAOZ,GAEfQ,IACFR,GAAaY,OAAOX,KA/BLS,EAkCHP,EAlCaQ,EAkCHX,EAjCrB,IAAIa,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCT,YAAW,KACLO,EACFF,EAAQ,UACNJ,QACAC,IAGFI,EAAO,UACLL,QACAC,MAGHA,OAoBEQ,MAAK,EA/CdT,SA+CiBA,EA/CjBC,MA+C2BA,MACjBS,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqBZ,QAAiBC,UAGzCY,OAAM,EApDfb,SAoDkBA,EApDlBC,MAoD4BA,MAClBS,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoBd,QAAeC,YAGxCX,GAGLG,EAAW","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst inputDelayEl = document.querySelector('input[name=\"delay\"]');\nconst inputStepEl = document.querySelector('input[name=\"step\"]');\nconst inputAmountEl = document.querySelector('input[name=\"amount\"]');\n\nlet delayTime = 0;\nlet step = 0;\nlet amount = 0;\nlet position = 0;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        reject({\n          position,\n          delay,\n        });\n      }\n    }, delay);\n  });\n}\n\nformEl.addEventListener('submit', event => {\n  event.preventDefault();\n  delayTime = inputDelayEl.value;\n  step = inputStepEl.value;\n  amount = inputAmountEl.value;\n\n  for (let i = 0; i < amount; i += 1) {\n    setTimeout(() => {\n      position += 1;\n      delayTime = Number(delayTime);\n\n      if (i) {\n        delayTime += Number(step);\n      }\n\n      createPromise(position, delayTime)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }, delayTime);\n  }\n\n  position = 0;\n});\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$inputDelayEl","$47d4ff9957288465$var$inputStepEl","$47d4ff9957288465$var$inputAmountEl","$47d4ff9957288465$var$delayTime","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$position","addEventListener","event","preventDefault","value","i","setTimeout","position","delay","Number","Promise","resolve","reject","shouldResolve","Math","random","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.62f4da02.js.map"}